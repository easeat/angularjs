讨论这么热烈。。。。angular, ember, knockout, backbone通吃的飘过。少年们，熟练使用任何一个即可，没什么大区别。个人最爱ember

所以说angular学习是有好处的：
1.了解前端的开发趋势
2.学习MV*的设计方法
3.学习模块化编程
4.学习如何测试模块
5.使用angular简化开发流程
6.随着google的大力支持和逐渐流行，公司开始使用angular，有些岗位需要有angular的知识才能工作。

AngularJS 使得开发现代的单一页面应用程序（SPAs：Single Page Applications）变得更加容易。 

    AngularJS 把应用程序数据绑定到 HTML 元素。
    AngularJS 可以克隆和重复 HTML 元素。
    AngularJS 可以隐藏和显示 HTML 元素。
    AngularJS 可以在 HTML 元素"背后"添加代码。
    AngularJS 支持输入验证。


HTML5 允许扩展的（自制的）属性，以 data- 开头。
AngularJS 属性以 ng- 开头，但是您可以使用 data-ng- 来让网页对 HTML5 有效。



AngularJS 表达式
AngularJS 表达式写在双大括号内：{{ expression }}。
AngularJS 表达式把数据绑定到 HTML，这与 ng-bind 指令有异曲同工之妙。
AngularJS 将在表达式书写的位置"输出"数据。
AngularJS 表达式 很像 JavaScript 表达式：它们可以包含文字、运算符和变量。
实例 {{ 5 + 5 }} 或 {{ firstName + " " + lastName }}



ng-model 指令
ng-model 指令 绑定 HTML 元素 到应用程序数据。
ng-model 指令也可以：
为应用程序数据提供类型验证（number、email、required）。
为应用程序数据提供状态（invalid、dirty、touched、error）。
为 HTML 元素提供 CSS 类。
绑定 HTML 元素到 HTML 表单。


restrict 值可以是以下几种:
    E 只限元素名使用
    A 只限属性使用
    C 只限类名使用
    M 只限注释使用
restrict 默认值为 EA, 即可以通过元素名和属性名来调用指令。



AngularJS 过滤器
AngularJS 过滤器可用于转换数据：
过滤器 	描述
currency 	格式化数字为货币格式。
filter 	从数组项中选择一个子集。
lowercase 	格式化字符串为小写。
orderBy 	根据某个表达式排列数组。
uppercase 	格式化字符串为大写。

AngularJS 会一直监控应用，处理事件变化， AngularJS 使用 $location 服务比使用 window.location 对象更好。

AngularJS $timeout 服务对应了 JS window.setTimeout 函数。

AngularJS $interval 服务对应了 JS window.setInterval 函数。

new Date().toLocaleTimeString();

$dirty 	表单有填写记录
$valid 	字段内容合法的
$invalid 	字段内容是非法的
$pristine 	表单没有填写记录

angular.lowercase() 	转换字符串为小写
angular.uppercase() 	转换字符串为大写
angular.isString() 	判断给定的对象是否为字符串，如果是返回 true。
angular.isNumber() 	判断给定的对象是否为数字，如果是返回 true。


AngularJS 提供很好的依赖注入机制。以下5个核心组件用来作为依赖注入：
    value
    factory
    service
    provider
    constant
    
factory 是一个函数用于返回值。在 service 和 controller 需要时创建。
通常我们使用 factory 函数来计算或返回值。